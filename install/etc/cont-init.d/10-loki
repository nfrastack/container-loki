#!/command/with-contenv bash

source /assets/functions/00-container
prepare_service single
prepare_service 03-monitoring
PROCESS_NAME="loki"

create_zabbix loki

mkdir -p "${CONFIG_PATH}"
    mkdir -p "${STORAGE_BOLTDB_PATH}"
    mkdir -p "${STORAGE_BOLTDB_SHIPPER_ACTIVEINDEX_PATH}"
    mkdir -p "${STORAGE_BOLTDB_SHIPPER_CACHE_PATH}"

case "${STORAGE_BOLTDB_SHIPPER_SHARED_STORE,,}" in
  "filesystem" )
    storage_boltdb_shared_store="filesystem"
    generate_storage_filesystem=true
  ;;
  "aws" | "s3" )
    storage_boltdb_shared_store="aws"
    generate_storage_s3=true
esac

case "${STORAGE_COMPACTOR_SHARED_STORE,,}" in
  "filesystem" )
    mkdir -p "${STORAGE_COMPACTOR_PATH}"
    storage_compactor_shared_store="filesystem"
    generate_storage_filesystem=true
  ;;
  "aws" | "s3" )
    storage_compactor_shared_store="aws"
    generate_storage_s3=true
esac

case "${STORAGE_SCHEMA_OBJECT_STORE,,}" in
  "filesystem" )
    mkdir -p "${STORAGE_FILESYSTEM_PATH}"
    storage_object_shared_store="filesystem"
    generate_storage_filesystem=true
  ;;
  "aws" | "s3" )
    storage_object_shared_store="aws"
    generate_storage_s3=true
esac

if var_true "${generate_storage_filesystem}" ; then
  storage_arg=$(echo "${storage_arg}" ; cat<<EOF
  filesystem:
    directory: ${STORAGE_FILESYSTEM_PATH}
EOF
                )
fi

if var_true "${generate_storage_s3}" ; then
  sanity_var STORAGE_S3_BUCKET "S3 Bucket Name"
  sanity_var STORAGE_S3_ENDPOINT "S3 Endpoint"
  sanity_var STORAGE_S3_REGION "S3 Bucket Region"
  sanity_var STORAGE_S3_ACCESS_ID "S3 Access ID"
  sanity_var STORAGE_S3_ACCESS_KEY "S3 Access Key"

  storage_arg=$(echo "${storage_arg}" ; cat<<EOF
  aws:
    bucketnames: ${STORAGE_S3_BUCKET}
    endpoint: ${STORAGE_S3_ENDPOINT}
    region: ${STORAGE_S3_REGION}
    access_key_id: ${STORAGE_S3_ACCESS_ID}
    secret_access_key: ${STORAGE_S3_ACCESS_KEY}
    insecure: ${STORAGE_S3_INSECURE,,}
    sse_encryption: ${STORAGE_S3_SSE_ENCRYPTION,,}
    http_config:
      idle_conn_timeout: ${STORAGE_S3_HTTP_TIMEOUT_IDLE,,}
      response_header_timeout: ${STORAGE_S3_HTTP_TIMEOUT_RESPONSEHEADER,,}
      insecure_skip_verify: ${STORAGE_S3_HTTP_INSECURE_SKIP_VERIFY,,}
    s3forcepathstyle: ${STORAGE_S3_FORCE_PATH_STYLE,,}
EOF
                )
fi

touch "${CONFIG_PATH}"/"${CONFIG_FILE}"

sed -i "s|<LOKI_LISTEN_PORT>|${LISTEN_PORT}|g" /etc/nginx/conf.d/default.conf

if [ "${SETUP_TYPE}" = "AUTO" ] || [ "${SETUP_TYPE}" = "auto" ] ; then
    print_debug "Configuring Loki"
    cat <<EOF > "${CONFIG_PATH}"/"${CONFIG_FILE}"
# Generated on $(TZ=${TIMEZONE} date +'%Y-%m-%d %H:%M:%S %Z')

auth_enabled: ${ENABLE_AUTH,,}

server:
  http_listen_port: ${LISTEN_PORT}
  log_level: ${LOG_LEVEL,,}
  grpc_server_max_recv_msg_size: ${GRPC_SERVER_MAX_RECV_MSG_SIZE}
  grpc_server_max_send_msg_size: ${GRPC_SERVER_MAX_SEND_MSG_SIZE}

ingester:
  lifecycler:
    address: ${INGESTER_LIFECYCLER_ADDRESS}
    ring:
      kvstore:
        store: ${INGESTER_LIFECYCLER_RING_KVSTORE,,}
      replication_factor: ${INGESTER_LIFECYCLER_RING_REPLICATION_FACTOR}
    final_sleep: ${INGESTER_LIFECYCLER_FINAL_SLEEP}
  chunk_encoding: ${INGESTER_CHUNK_ENCODING,,}
  chunk_idle_period: ${INGESTER_CHUNK_IDLE_PERIOD}
  chunk_retain_period: ${INGESTER_CHUNK_RETAIN_PERIOD}
  chunk_target_size: ${INGESTER_CHUNK_TARGET_SIZE}
  max_transfer_retries: ${INGESTER_MAX_TRANSFER_RETRIES}

schema_config:
  configs:
  - from: 2020-07-01
    store: ${SCHEMA_STORE,,}
    object_store: ${storage_object_shared_store}
    schema: v11
    index:
      prefix: ${SCHEMA_INDEX_PREFIX,,}
      period: ${SCHEMA_INDEX_PERIOD,,}

storage_config:
  boltdb_shipper:
    active_index_directory: ${STORAGE_BOLTDB_SHIPPER_ACTIVEINDEX_PATH}
    cache_location: ${STORAGE_BOLTDB_SHIPPER_CACHE_PATH}
    cache_ttl: ${STORAGE_BOLTDB_SHIPPER_CACHE_TTL}
    shared_store: ${storage_boltdb_shared_store}
${storage_arg}


compactor:
  working_directory: ${STORAGE_COMPACTOR_PATH}
  shared_store: ${storage_compactor_shared_store}

limits_config:
  enforce_metric_name: ${LIMITS_ENFORCE_METRIC_NAME,,}
  reject_old_samples: ${LIMITS_REJECT_OLD_SAMPLES,,}
  reject_old_samples_max_age: ${LIMITS_REJECT_OLD_SAMPLES_MAX_AGE,,}
  ingestion_rate_mb: ${LIMITS_INGESTION_RATE_MB}
  ingestion_burst_size_mb: ${LIMITS_BURST_SIZE_MB}
  unordered_writes: ${LIMITS_UNORDERED_WRITES,,}

table_manager:
  retention_deletes_enabled: ${TABLE_RETENTION_DELETES,,}
  retention_period: ${TABLE_RETENION_PERIOD,,}

chunk_store_config:
  max_look_back_period: ${CHUNK_MAX_LOOK_BACK,,}

EOF
    else
        print_info "Not auto configuring loki"
    fi

liftoff
